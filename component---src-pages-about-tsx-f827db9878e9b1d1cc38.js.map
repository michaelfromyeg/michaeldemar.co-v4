{"version":3,"file":"component---src-pages-about-tsx-f827db9878e9b1d1cc38.js","mappings":"uMAcMA,EAAW,SAAHC,GAAyD,IAAnDC,EAAcD,EAAdC,eAChB,OACIC,EAAAA,cAAA,SAAG,cACY,MAAO,eAAaD,EAAe,8CAA2CC,EAAAA,cAAA,KAAGC,KAAK,kBAAkBC,OAAO,SAASC,IAAI,cAAa,wCAAwC,yLAEjJH,EAAAA,cAAA,KAAGC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,cAAa,yBAAyB,gCAA6BH,EAAAA,cAAA,KAAGC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,cAAa,iBAAiB,kBACxP,OAAQ,cAAWH,EAAAA,cAAA,KAAGC,KAAK,sBAAsBC,OAAO,SAASC,IAAI,cAAa,oBAAqB,KAACH,EAAAA,cAAA,KAAGC,KAAK,oCAAoCC,OAAO,SAASC,IAAI,cAAa,uBAAuB,yBAAsBH,EAAAA,cAAA,KAAGC,KAAK,wBAAwBC,OAAO,SAASC,IAAI,cAAa,0CAA0C,cACjV,OAAQ,8CAA2CH,EAAAA,cAAA,KAAGC,KAAK,0GAA0GC,OAAO,SAASC,IAAI,cAAa,oBAAoB,8BAA2BH,EAAAA,cAAA,KAAGC,KAAK,0GAA0GC,OAAO,SAASC,IAAI,cAAa,sCAAsC,IAGnc,EA6EA,UAvEc,SAAHC,GAAgD,IAA1CC,EAAQD,EAARC,SAEPC,GAAOC,EAAAA,EAAAA,gBAAe,cAiCpBC,EAAUF,EAAKG,KAAKC,aAApBF,MAEFG,GAAWC,EAAAA,EAAAA,GAASN,EAAKO,KAAKC,iBAC9BC,GAAeH,EAAAA,EAAAA,GAASN,EAAKU,SAASF,iBACtCG,GAAeL,EAAAA,EAAAA,GAASN,EAAKY,SAASJ,iBAE5C,QAAiBK,IAAbR,QAA2CQ,IAAjBJ,QAA+CI,IAAjBF,EACxD,MAAM,IAAIG,MAAM,yCAGpB,OACIpB,EAAAA,cAACqB,EAAAA,EAAM,CAAChB,SAAUA,EAAUG,MAAOA,GAC/BR,EAAAA,cAACsB,EAAAA,EAAG,CAACd,MAAM,UACXR,EAAAA,cAACuB,EAAAA,EAAG,MACJvB,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAACH,EAAQ,CAACE,eAAgByB,EAAAA,IAC1BxB,EAAAA,cAAA,OACIyB,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,SAAU,SACVC,cAAe,SACfC,eAAgB,WAGpB9B,EAAAA,cAAC+B,EAAAA,EAAW,CAACC,IAAK,oCAAqCC,MAAOtB,IAC9DX,EAAAA,cAAA,SAAG,mCACHA,EAAAA,cAAC+B,EAAAA,EAAW,CAACC,IAAK,0BAA2BC,MAAOlB,IACpDf,EAAAA,cAAA,SAAG,sCACHA,EAAAA,cAAC+B,EAAAA,EAAW,CAACC,IAAK,8BAA+BC,MAAOhB,IACxDjB,EAAAA,cAAA,SAAG,6DAInB,C","sources":["webpack://michaeldemar.co/./src/pages/about.tsx"],"sourcesContent":["import React, { ReactElement } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport Bio from \"../components/Bio/Bio\";\nimport Format from \"../components/Format/Format\";\nimport SEO from \"../components/SEO/SEO\";\n\nimport { UNIVERSITY_YEAR_AS_STRING } from \"../data/Constants\";\n\ninterface AboutBioProps {\n    universityYear: string\n}\n\nconst AboutBio = ({ universityYear }: AboutBioProps): ReactElement => {\n    return (\n        <p>\n            Hey there! {`I'm`} Michael, a {universityYear} Computer Science Honours student from the <a href=\"https://ubc.ca/\" target=\"_blank\" rel=\"noreferrer\">University of British Columbia (UBC)</a> in Vancouver, Canada.\n            I am originally from Edmonton, Alberta; I made the leap over to pursue my undergraduate degree in the fall of 2019.\n            Alongside my major, I am working towards a <a href=\"https://datascience.ubc.ca/minor\" target=\"_blank\" rel=\"noreferrer\">minor in Data Science</a> and am a participant in the <a href=\"https://sciencecoop.ubc.ca/\" target=\"_blank\" rel=\"noreferrer\">co-op program</a>.\n            In the past, {`I've`} worked at <a href=\"https://curo46.com/\" target=\"_blank\" rel=\"noreferrer\">General Genomics</a>, <a href=\"https://research.samsung.com/srca\" target=\"_blank\" rel=\"noreferrer\">Samsung Electronics</a> (at SRCA), and as an <a href=\"https://cs.ubc.ca/ta/\" target=\"_blank\" rel=\"noreferrer\">Undergraduate Teaching Assistant (UTA)</a>.\n            To date, {`I've`} taught six separate courses, ranging from <a href=\"https://courses.students.ubc.ca/cs/courseschedule?pname=subjarea&tname=subj-course&dept=CPSC&course=213\" target=\"_blank\" rel=\"noreferrer\">computer systems</a> (using C and Assembly) to <a href=\"https://courses.students.ubc.ca/cs/courseschedule?pname=subjarea&tname=subj-course&dept=CPSC&course=103\" target=\"_blank\" rel=\"noreferrer\">introductory programming in Python</a>!\n        </p>\n    )\n}\n\ninterface AboutProps {\n    location: string;\n}\n\nconst About = ({ location }: AboutProps): ReactElement => {\n    // Fetch bio, photos\n    const data = useStaticQuery(graphql`query AboutQuery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  leo1: file(relativePath: {eq: \"images/leo1.png\" }) {\n    childImageSharp {\n        gatsbyImageData(\n          width: 400\n          layout: CONSTRAINED\n        )\n    }\n  }\n  samsung1: file(relativePath: {eq: \"images/samsung1.png\" }) {\n    childImageSharp {\n        gatsbyImageData(\n          width: 400\n          layout: CONSTRAINED\n        )\n    }\n  }\n  toronto1: file(relativePath: {eq: \"images/toronto1.png\" }) {\n    childImageSharp {\n        gatsbyImageData(\n          width: 400\n          layout: CONSTRAINED\n        )\n    }\n  }\n}\n`);\n\n    const { title } = data.site.siteMetadata;\n\n    const leoImage = getImage(data.leo1.childImageSharp)\n    const samsungImage = getImage(data.samsung1.childImageSharp)\n    const torontoImage = getImage(data.toronto1.childImageSharp)\n\n    if (leoImage === undefined || samsungImage === undefined || torontoImage === undefined) {\n        throw new Error(\"Could not find image for /about page!\")\n    }\n\n    return (\n        <Format location={location} title={title}>\n            <SEO title=\"About\" />\n            <Bio />\n            <h1>A little about me...</h1>\n            <AboutBio universityYear={UNIVERSITY_YEAR_AS_STRING} />\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"nowrap\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <GatsbyImage alt={\"A picture of my pet tortoise Leo.\"} image={leoImage} />\n                <p>My pet tortoise Leo! (Jun 2020)</p>\n                <GatsbyImage alt={\"My last day at Samsung.\"} image={samsungImage} />\n                <p>My last day at Samsung. (Aug 2021)</p>\n                <GatsbyImage alt={\"In Toronto for Summer 2022!\"} image={torontoImage} />\n                <p>Interning in Toronto, Ontario for the summer. (May 2022)</p>\n            </div>\n        </Format>\n    );\n};\n\nexport default About;\n"],"names":["AboutBio","_ref","universityYear","React","href","target","rel","_ref2","location","data","useStaticQuery","title","site","siteMetadata","leoImage","getImage","leo1","childImageSharp","samsungImage","samsung1","torontoImage","toronto1","undefined","Error","Format","SEO","Bio","UNIVERSITY_YEAR_AS_STRING","style","display","alignItems","flexWrap","flexDirection","justifyContent","GatsbyImage","alt","image"],"sourceRoot":""}