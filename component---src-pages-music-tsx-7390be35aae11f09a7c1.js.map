{"version":3,"file":"component---src-pages-music-tsx-7390be35aae11f09a7c1.js","mappings":"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","sources":["webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/Client.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/api-endpoints.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/errors.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/helpers.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/index.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/logging.js","webpack://michaeldemar.co/./node_modules/@notionhq/client/build/src/utils.js","webpack://michaeldemar.co/./src/components/Format/Format.tsx","webpack://michaeldemar.co/./src/pages/music.tsx","webpack://michaeldemar.co/./node_modules/node-fetch/browser.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Client_auth, _Client_logLevel, _Client_logger, _Client_prefixUrl, _Client_timeoutMs, _Client_notionVersion, _Client_fetch, _Client_agent, _Client_userAgent;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logging_1 = require(\"./logging\");\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst api_endpoints_1 = require(\"./api-endpoints\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst package_json_1 = require(\"../package.json\");\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        _Client_auth.set(this, void 0);\n        _Client_logLevel.set(this, void 0);\n        _Client_logger.set(this, void 0);\n        _Client_prefixUrl.set(this, void 0);\n        _Client_timeoutMs.set(this, void 0);\n        _Client_notionVersion.set(this, void 0);\n        _Client_fetch.set(this, void 0);\n        _Client_agent.set(this, void 0);\n        _Client_userAgent.set(this, void 0);\n        /*\n         * Notion API endpoints\n         */\n        this.blocks = {\n            /**\n             * Retrieve block\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getBlock.path(args),\n                    method: api_endpoints_1.getBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update block\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateBlock.path(args),\n                    method: api_endpoints_1.updateBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Delete block\n             */\n            delete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.deleteBlock.path(args),\n                    method: api_endpoints_1.deleteBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            children: {\n                /**\n                 * Append block children\n                 */\n                append: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.appendBlockChildren.path(args),\n                        method: api_endpoints_1.appendBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n                /**\n                 * Retrieve block children\n                 */\n                list: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.listBlockChildren.path(args),\n                        method: api_endpoints_1.listBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.databases = {\n            /**\n             * List databases\n             *\n             * @deprecated Please use `search`\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listDatabases.path(),\n                    method: api_endpoints_1.listDatabases.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a database\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getDatabase.path(args),\n                    method: api_endpoints_1.getDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Query a database\n             */\n            query: (args) => {\n                return this.request({\n                    path: api_endpoints_1.queryDatabase.path(args),\n                    method: api_endpoints_1.queryDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Create a database\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createDatabase.path(),\n                    method: api_endpoints_1.createDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update a database\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateDatabase.path(args),\n                    method: api_endpoints_1.updateDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.pages = {\n            /**\n             * Create a page\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createPage.path(),\n                    method: api_endpoints_1.createPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a page\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getPage.path(args),\n                    method: api_endpoints_1.getPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update page properties\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updatePage.path(args),\n                    method: api_endpoints_1.updatePage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updatePage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updatePage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            properties: {\n                /**\n                 * Retrieve page property\n                 */\n                retrieve: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.getPageProperty.path(args),\n                        method: api_endpoints_1.getPageProperty.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.users = {\n            /**\n             * Retrieve a user\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getUser.path(args),\n                    method: api_endpoints_1.getUser.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getUser.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getUser.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List all users\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listUsers.path(),\n                    method: api_endpoints_1.listUsers.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listUsers.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listUsers.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Get details about bot\n             */\n            me: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getSelf.path(),\n                    method: api_endpoints_1.getSelf.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getSelf.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getSelf.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.comments = {\n            /**\n             * Create a comment\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createComment.path(),\n                    method: api_endpoints_1.createComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List comments\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listComments.path(),\n                    method: api_endpoints_1.listComments.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listComments.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listComments.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        /**\n         * Search\n         */\n        this.search = (args) => {\n            return this.request({\n                path: api_endpoints_1.search.path(),\n                method: api_endpoints_1.search.method,\n                query: (0, utils_1.pick)(args, api_endpoints_1.search.queryParams),\n                body: (0, utils_1.pick)(args, api_endpoints_1.search.bodyParams),\n                auth: args === null || args === void 0 ? void 0 : args.auth,\n            });\n        };\n        this.oauth = {\n            /**\n             * Get token\n             */\n            token: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthToken.path(),\n                    method: api_endpoints_1.oauthToken.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n        };\n        __classPrivateFieldSet(this, _Client_auth, options === null || options === void 0 ? void 0 : options.auth, \"f\");\n        __classPrivateFieldSet(this, _Client_logLevel, (_a = options === null || options === void 0 ? void 0 : options.logLevel) !== null && _a !== void 0 ? _a : logging_1.LogLevel.WARN, \"f\");\n        __classPrivateFieldSet(this, _Client_logger, (_b = options === null || options === void 0 ? void 0 : options.logger) !== null && _b !== void 0 ? _b : (0, logging_1.makeConsoleLogger)(package_json_1.name), \"f\");\n        __classPrivateFieldSet(this, _Client_prefixUrl, ((_c = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _c !== void 0 ? _c : \"https://api.notion.com\") + \"/v1/\", \"f\");\n        __classPrivateFieldSet(this, _Client_timeoutMs, (_d = options === null || options === void 0 ? void 0 : options.timeoutMs) !== null && _d !== void 0 ? _d : 60000, \"f\");\n        __classPrivateFieldSet(this, _Client_notionVersion, (_e = options === null || options === void 0 ? void 0 : options.notionVersion) !== null && _e !== void 0 ? _e : Client.defaultNotionVersion, \"f\");\n        __classPrivateFieldSet(this, _Client_fetch, (_f = options === null || options === void 0 ? void 0 : options.fetch) !== null && _f !== void 0 ? _f : node_fetch_1.default, \"f\");\n        __classPrivateFieldSet(this, _Client_agent, options === null || options === void 0 ? void 0 : options.agent, \"f\");\n        __classPrivateFieldSet(this, _Client_userAgent, `notionhq-client/${package_json_1.version}`, \"f\");\n    }\n    /**\n     * Sends a request.\n     *\n     * @param path\n     * @param method\n     * @param query\n     * @param body\n     * @returns\n     */\n    async request({ path, method, query, body, auth, }) {\n        this.log(logging_1.LogLevel.INFO, \"request start\", { method, path });\n        // If the body is empty, don't send the body in the HTTP request\n        const bodyAsJsonString = !body || Object.entries(body).length === 0\n            ? undefined\n            : JSON.stringify(body);\n        const url = new URL(`${__classPrivateFieldGet(this, _Client_prefixUrl, \"f\")}${path}`);\n        if (query) {\n            for (const [key, value] of Object.entries(query)) {\n                if (value !== undefined) {\n                    if (Array.isArray(value)) {\n                        value.forEach(val => url.searchParams.append(key, decodeURIComponent(val)));\n                    }\n                    else {\n                        url.searchParams.append(key, String(value));\n                    }\n                }\n            }\n        }\n        // Allow both client ID / client secret based auth as well as token based auth.\n        let authorizationHeader;\n        if (typeof auth === \"object\") {\n            // Client ID and secret based auth is **ONLY** supported when using the\n            // `/oauth/token` endpoint. If this is the case, handle formatting the\n            // authorization header as required by `Basic` auth.\n            const unencodedCredential = `${auth.client_id}:${auth.client_secret}`;\n            const encodedCredential = Buffer.from(unencodedCredential).toString(\"base64\");\n            authorizationHeader = { authorization: `Basic ${encodedCredential}` };\n        }\n        else {\n            // Otherwise format authorization header as `Bearer` token auth.\n            authorizationHeader = this.authAsHeaders(auth);\n        }\n        const headers = {\n            ...authorizationHeader,\n            \"Notion-Version\": __classPrivateFieldGet(this, _Client_notionVersion, \"f\"),\n            \"user-agent\": __classPrivateFieldGet(this, _Client_userAgent, \"f\"),\n        };\n        if (bodyAsJsonString !== undefined) {\n            headers[\"content-type\"] = \"application/json\";\n        }\n        try {\n            const response = await errors_1.RequestTimeoutError.rejectAfterTimeout(__classPrivateFieldGet(this, _Client_fetch, \"f\").call(this, url.toString(), {\n                method: method.toUpperCase(),\n                headers,\n                body: bodyAsJsonString,\n                agent: __classPrivateFieldGet(this, _Client_agent, \"f\"),\n            }), __classPrivateFieldGet(this, _Client_timeoutMs, \"f\"));\n            const responseText = await response.text();\n            if (!response.ok) {\n                throw (0, errors_1.buildRequestError)(response, responseText);\n            }\n            const responseJson = JSON.parse(responseText);\n            this.log(logging_1.LogLevel.INFO, `request success`, { method, path });\n            return responseJson;\n        }\n        catch (error) {\n            if (!(0, errors_1.isNotionClientError)(error)) {\n                throw error;\n            }\n            // Log the error if it's one of our known error types\n            this.log(logging_1.LogLevel.WARN, `request fail`, {\n                code: error.code,\n                message: error.message,\n            });\n            if ((0, errors_1.isHTTPResponseError)(error)) {\n                // The response body may contain sensitive information so it is logged separately at the DEBUG level\n                this.log(logging_1.LogLevel.DEBUG, `failed response body`, {\n                    body: error.body,\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Emits a log message to the console.\n     *\n     * @param level The level for this message\n     * @param args Arguments to send to the console\n     */\n    log(level, message, extraInfo) {\n        if ((0, logging_1.logLevelSeverity)(level) >= (0, logging_1.logLevelSeverity)(__classPrivateFieldGet(this, _Client_logLevel, \"f\"))) {\n            __classPrivateFieldGet(this, _Client_logger, \"f\").call(this, level, message, extraInfo);\n        }\n    }\n    /**\n     * Transforms an API key or access token into a headers object suitable for an HTTP request.\n     *\n     * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n     * an empty object\n     *\n     * @param auth API key or access token\n     * @returns headers key-value object\n     */\n    authAsHeaders(auth) {\n        const headers = {};\n        const authHeaderValue = auth !== null && auth !== void 0 ? auth : __classPrivateFieldGet(this, _Client_auth, \"f\");\n        if (authHeaderValue !== undefined) {\n            headers[\"authorization\"] = `Bearer ${authHeaderValue}`;\n        }\n        return headers;\n    }\n}\nexports.default = Client;\n_Client_auth = new WeakMap(), _Client_logLevel = new WeakMap(), _Client_logger = new WeakMap(), _Client_prefixUrl = new WeakMap(), _Client_timeoutMs = new WeakMap(), _Client_notionVersion = new WeakMap(), _Client_fetch = new WeakMap(), _Client_agent = new WeakMap(), _Client_userAgent = new WeakMap();\nClient.defaultNotionVersion = \"2022-06-28\";\n//# sourceMappingURL=Client.js.map","\"use strict\";\n// cspell:disable-file\n// Note: This is a generated file.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oauthToken = exports.listComments = exports.createComment = exports.search = exports.createDatabase = exports.listDatabases = exports.queryDatabase = exports.updateDatabase = exports.getDatabase = exports.appendBlockChildren = exports.listBlockChildren = exports.deleteBlock = exports.updateBlock = exports.getBlock = exports.getPageProperty = exports.updatePage = exports.getPage = exports.createPage = exports.listUsers = exports.getUser = exports.getSelf = void 0;\nexports.getSelf = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [],\n    path: () => `users/me`,\n};\nexports.getUser = {\n    method: \"get\",\n    pathParams: [\"user_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `users/${p.user_id}`,\n};\nexports.listUsers = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `users`,\n};\nexports.createPage = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n    path: () => `pages`,\n};\nexports.getPage = {\n    method: \"get\",\n    pathParams: [\"page_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.updatePage = {\n    method: \"patch\",\n    pathParams: [\"page_id\"],\n    queryParams: [],\n    bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\", \"in_trash\"],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.getPageProperty = {\n    method: \"get\",\n    pathParams: [\"page_id\", \"property_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}/properties/${p.property_id}`,\n};\nexports.getBlock = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.updateBlock = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"embed\",\n        \"type\",\n        \"archived\",\n        \"in_trash\",\n        \"bookmark\",\n        \"image\",\n        \"video\",\n        \"pdf\",\n        \"file\",\n        \"audio\",\n        \"code\",\n        \"equation\",\n        \"divider\",\n        \"breadcrumb\",\n        \"table_of_contents\",\n        \"link_to_page\",\n        \"table_row\",\n        \"heading_1\",\n        \"heading_2\",\n        \"heading_3\",\n        \"paragraph\",\n        \"bulleted_list_item\",\n        \"numbered_list_item\",\n        \"quote\",\n        \"to_do\",\n        \"toggle\",\n        \"template\",\n        \"callout\",\n        \"synced_block\",\n        \"table\",\n    ],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.deleteBlock = {\n    method: \"delete\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.listBlockChildren = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.appendBlockChildren = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\"children\", \"after\"],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.getDatabase = {\n    method: \"get\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.updateDatabase = {\n    method: \"patch\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"title\",\n        \"description\",\n        \"icon\",\n        \"cover\",\n        \"properties\",\n        \"is_inline\",\n        \"archived\",\n        \"in_trash\",\n    ],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.queryDatabase = {\n    method: \"post\",\n    pathParams: [\"database_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [\n        \"sorts\",\n        \"filter\",\n        \"start_cursor\",\n        \"page_size\",\n        \"archived\",\n        \"in_trash\",\n    ],\n    path: (p) => `databases/${p.database_id}/query`,\n};\nexports.listDatabases = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `databases`,\n};\nexports.createDatabase = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"parent\",\n        \"properties\",\n        \"icon\",\n        \"cover\",\n        \"title\",\n        \"description\",\n        \"is_inline\",\n    ],\n    path: () => `databases`,\n};\nexports.search = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n    path: () => `search`,\n};\nexports.createComment = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n    path: () => `comments`,\n};\nexports.listComments = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `comments`,\n};\nexports.oauthToken = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"grant_type\", \"code\", \"redirect_uri\", \"external_account\"],\n    path: () => `oauth/token`,\n};\n//# sourceMappingURL=api-endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildRequestError = exports.APIResponseError = exports.UnknownHTTPResponseError = exports.isHTTPResponseError = exports.RequestTimeoutError = exports.isNotionClientError = exports.ClientErrorCode = exports.APIErrorCode = void 0;\nconst utils_1 = require(\"./utils\");\n/**\n * Error codes returned in responses from the API.\n */\nvar APIErrorCode;\n(function (APIErrorCode) {\n    APIErrorCode[\"Unauthorized\"] = \"unauthorized\";\n    APIErrorCode[\"RestrictedResource\"] = \"restricted_resource\";\n    APIErrorCode[\"ObjectNotFound\"] = \"object_not_found\";\n    APIErrorCode[\"RateLimited\"] = \"rate_limited\";\n    APIErrorCode[\"InvalidJSON\"] = \"invalid_json\";\n    APIErrorCode[\"InvalidRequestURL\"] = \"invalid_request_url\";\n    APIErrorCode[\"InvalidRequest\"] = \"invalid_request\";\n    APIErrorCode[\"ValidationError\"] = \"validation_error\";\n    APIErrorCode[\"ConflictError\"] = \"conflict_error\";\n    APIErrorCode[\"InternalServerError\"] = \"internal_server_error\";\n    APIErrorCode[\"ServiceUnavailable\"] = \"service_unavailable\";\n})(APIErrorCode = exports.APIErrorCode || (exports.APIErrorCode = {}));\n/**\n * Error codes generated for client errors.\n */\nvar ClientErrorCode;\n(function (ClientErrorCode) {\n    ClientErrorCode[\"RequestTimeout\"] = \"notionhq_client_request_timeout\";\n    ClientErrorCode[\"ResponseError\"] = \"notionhq_client_response_error\";\n})(ClientErrorCode = exports.ClientErrorCode || (exports.ClientErrorCode = {}));\n/**\n * Base error type.\n */\nclass NotionClientErrorBase extends Error {\n}\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nfunction isNotionClientError(error) {\n    return (0, utils_1.isObject)(error) && error instanceof NotionClientErrorBase;\n}\nexports.isNotionClientError = isNotionClientError;\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode(error, codes) {\n    return isNotionClientError(error) && error.code in codes;\n}\n/**\n * Error thrown by the client if a request times out.\n */\nclass RequestTimeoutError extends NotionClientErrorBase {\n    constructor(message = \"Request to Notion API has timed out\") {\n        super(message);\n        this.code = ClientErrorCode.RequestTimeout;\n        this.name = \"RequestTimeoutError\";\n    }\n    static isRequestTimeoutError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.RequestTimeout]: true,\n        });\n    }\n    static rejectAfterTimeout(promise, timeoutMS) {\n        return new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                reject(new RequestTimeoutError());\n            }, timeoutMS);\n            promise\n                .then(resolve)\n                .catch(reject)\n                .then(() => clearTimeout(timeoutId));\n        });\n    }\n}\nexports.RequestTimeoutError = RequestTimeoutError;\nclass HTTPResponseError extends NotionClientErrorBase {\n    constructor(args) {\n        super(args.message);\n        this.name = \"HTTPResponseError\";\n        const { code, status, headers, rawBodyText } = args;\n        this.code = code;\n        this.status = status;\n        this.headers = headers;\n        this.body = rawBodyText;\n    }\n}\nconst httpResponseErrorCodes = {\n    [ClientErrorCode.ResponseError]: true,\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\nfunction isHTTPResponseError(error) {\n    if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n        return false;\n    }\n    return true;\n}\nexports.isHTTPResponseError = isHTTPResponseError;\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nclass UnknownHTTPResponseError extends HTTPResponseError {\n    constructor(args) {\n        var _a;\n        super({\n            ...args,\n            code: ClientErrorCode.ResponseError,\n            message: (_a = args.message) !== null && _a !== void 0 ? _a : `Request to Notion API failed with status: ${args.status}`,\n        });\n        this.name = \"UnknownHTTPResponseError\";\n    }\n    static isUnknownHTTPResponseError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.ResponseError]: true,\n        });\n    }\n}\nexports.UnknownHTTPResponseError = UnknownHTTPResponseError;\nconst apiErrorCodes = {\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nclass APIResponseError extends HTTPResponseError {\n    constructor() {\n        super(...arguments);\n        this.name = \"APIResponseError\";\n    }\n    static isAPIResponseError(error) {\n        return isNotionClientErrorWithCode(error, apiErrorCodes);\n    }\n}\nexports.APIResponseError = APIResponseError;\nfunction buildRequestError(response, bodyText) {\n    const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText);\n    if (apiErrorResponseBody !== undefined) {\n        return new APIResponseError({\n            code: apiErrorResponseBody.code,\n            message: apiErrorResponseBody.message,\n            headers: response.headers,\n            status: response.status,\n            rawBodyText: bodyText,\n        });\n    }\n    return new UnknownHTTPResponseError({\n        message: undefined,\n        headers: response.headers,\n        status: response.status,\n        rawBodyText: bodyText,\n    });\n}\nexports.buildRequestError = buildRequestError;\nfunction parseAPIErrorResponseBody(body) {\n    if (typeof body !== \"string\") {\n        return;\n    }\n    let parsed;\n    try {\n        parsed = JSON.parse(body);\n    }\n    catch (parseError) {\n        return;\n    }\n    if (!(0, utils_1.isObject)(parsed) ||\n        typeof parsed[\"message\"] !== \"string\" ||\n        !isAPIErrorCode(parsed[\"code\"])) {\n        return;\n    }\n    return {\n        ...parsed,\n        code: parsed[\"code\"],\n        message: parsed[\"message\"],\n    };\n}\nfunction isAPIErrorCode(code) {\n    return typeof code === \"string\" && code in apiErrorCodes;\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMentionRichTextItemResponse = exports.isEquationRichTextItemResponse = exports.isTextRichTextItemResponse = exports.isFullComment = exports.isFullUser = exports.isFullPageOrDatabase = exports.isFullDatabase = exports.isFullPage = exports.isFullBlock = exports.collectPaginatedAPI = exports.iteratePaginatedAPI = void 0;\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function* iteratePaginatedAPI(listFn, firstPageArgs) {\n    let nextCursor = firstPageArgs.start_cursor;\n    do {\n        const response = await listFn({\n            ...firstPageArgs,\n            start_cursor: nextCursor,\n        });\n        yield* response.results;\n        nextCursor = response.next_cursor;\n    } while (nextCursor);\n}\nexports.iteratePaginatedAPI = iteratePaginatedAPI;\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = await collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function collectPaginatedAPI(listFn, firstPageArgs) {\n    const results = [];\n    for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n        results.push(item);\n    }\n    return results;\n}\nexports.collectPaginatedAPI = collectPaginatedAPI;\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nfunction isFullBlock(response) {\n    return response.object === \"block\" && \"type\" in response;\n}\nexports.isFullBlock = isFullBlock;\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nfunction isFullPage(response) {\n    return response.object === \"page\" && \"url\" in response;\n}\nexports.isFullPage = isFullPage;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nfunction isFullDatabase(response) {\n    return response.object === \"database\" && \"title\" in response;\n}\nexports.isFullDatabase = isFullDatabase;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse` or a full\n * `PageObjectResponse`.\n */\nfunction isFullPageOrDatabase(response) {\n    if (response.object === \"database\") {\n        return isFullDatabase(response);\n    }\n    else {\n        return isFullPage(response);\n    }\n}\nexports.isFullPageOrDatabase = isFullPageOrDatabase;\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nfunction isFullUser(response) {\n    return \"type\" in response;\n}\nexports.isFullUser = isFullUser;\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nfunction isFullComment(response) {\n    return \"created_by\" in response;\n}\nexports.isFullComment = isFullComment;\n/**\n * @returns `true` if `richText` is a `TextRichTextItemResponse`.\n */\nfunction isTextRichTextItemResponse(richText) {\n    return richText.type === \"text\";\n}\nexports.isTextRichTextItemResponse = isTextRichTextItemResponse;\n/**\n * @returns `true` if `richText` is an `EquationRichTextItemResponse`.\n */\nfunction isEquationRichTextItemResponse(richText) {\n    return richText.type === \"equation\";\n}\nexports.isEquationRichTextItemResponse = isEquationRichTextItemResponse;\n/**\n * @returns `true` if `richText` is an `MentionRichTextItemResponse`.\n */\nfunction isMentionRichTextItemResponse(richText) {\n    return richText.type === \"mention\";\n}\nexports.isMentionRichTextItemResponse = isMentionRichTextItemResponse;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullPageOrDatabase = exports.isFullComment = exports.isFullUser = exports.isFullPage = exports.isFullDatabase = exports.isFullBlock = exports.iteratePaginatedAPI = exports.collectPaginatedAPI = exports.isNotionClientError = exports.RequestTimeoutError = exports.UnknownHTTPResponseError = exports.APIResponseError = exports.ClientErrorCode = exports.APIErrorCode = exports.LogLevel = exports.Client = void 0;\nvar Client_1 = require(\"./Client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return Client_1.default; } });\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return logging_1.LogLevel; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIErrorCode\", { enumerable: true, get: function () { return errors_1.APIErrorCode; } });\nObject.defineProperty(exports, \"ClientErrorCode\", { enumerable: true, get: function () { return errors_1.ClientErrorCode; } });\nObject.defineProperty(exports, \"APIResponseError\", { enumerable: true, get: function () { return errors_1.APIResponseError; } });\nObject.defineProperty(exports, \"UnknownHTTPResponseError\", { enumerable: true, get: function () { return errors_1.UnknownHTTPResponseError; } });\nObject.defineProperty(exports, \"RequestTimeoutError\", { enumerable: true, get: function () { return errors_1.RequestTimeoutError; } });\n// Error helpers\nObject.defineProperty(exports, \"isNotionClientError\", { enumerable: true, get: function () { return errors_1.isNotionClientError; } });\nvar helpers_1 = require(\"./helpers\");\nObject.defineProperty(exports, \"collectPaginatedAPI\", { enumerable: true, get: function () { return helpers_1.collectPaginatedAPI; } });\nObject.defineProperty(exports, \"iteratePaginatedAPI\", { enumerable: true, get: function () { return helpers_1.iteratePaginatedAPI; } });\nObject.defineProperty(exports, \"isFullBlock\", { enumerable: true, get: function () { return helpers_1.isFullBlock; } });\nObject.defineProperty(exports, \"isFullDatabase\", { enumerable: true, get: function () { return helpers_1.isFullDatabase; } });\nObject.defineProperty(exports, \"isFullPage\", { enumerable: true, get: function () { return helpers_1.isFullPage; } });\nObject.defineProperty(exports, \"isFullUser\", { enumerable: true, get: function () { return helpers_1.isFullUser; } });\nObject.defineProperty(exports, \"isFullComment\", { enumerable: true, get: function () { return helpers_1.isFullComment; } });\nObject.defineProperty(exports, \"isFullPageOrDatabase\", { enumerable: true, get: function () { return helpers_1.isFullPageOrDatabase; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\nconst utils_1 = require(\"./utils\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nfunction makeConsoleLogger(name) {\n    return (level, message, extraInfo) => {\n        console[level](`${name} ${level}:`, message, extraInfo);\n    };\n}\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n    switch (level) {\n        case LogLevel.DEBUG:\n            return 20;\n        case LogLevel.INFO:\n            return 40;\n        case LogLevel.WARN:\n            return 60;\n        case LogLevel.ERROR:\n            return 80;\n        default:\n            return (0, utils_1.assertNever)(level);\n    }\n}\nexports.logLevelSeverity = logLevelSeverity;\n//# sourceMappingURL=logging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = exports.pick = exports.assertNever = void 0;\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nfunction assertNever(value) {\n    throw new Error(`Unexpected value should never occur: ${value}`);\n}\nexports.assertNever = assertNever;\nfunction pick(base, keys) {\n    const entries = keys.map(key => [key, base === null || base === void 0 ? void 0 : base[key]]);\n    return Object.fromEntries(entries);\n}\nexports.pick = pick;\nfunction isObject(o) {\n    return typeof o === \"object\" && o !== null;\n}\nexports.isObject = isObject;\n//# sourceMappingURL=utils.js.map","import React, { ReactElement } from \"react\";\nimport Links, { Locations } from \"../Links/Links\";\nimport Footer from \"../Footer/Footer\"\n\nimport { rhythm } from \"../../utils/typography\";\n\ninterface FormatProps {\n    location: string;\n    title: string;\n    children: React.ReactNode | React.ReactElement[];\n}\n\nconst Format = ({ children }: FormatProps): ReactElement => {\n    return (\n        <div\n            style={{\n                marginLeft: `auto`,\n                marginRight: `auto`,\n                maxWidth: rhythm(36),\n                padding: `${rhythm(3 / 2)} ${rhythm(3 / 4)}`,\n            }}\n        >\n            <header style={{\n                marginBottom: `1em`\n            }}>\n                <Links location={Locations.POSTS} />\n            </header>\n            <main>{children}</main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Format;\n","import React, { ReactElement } from \"react\";\nimport Format from \"../components/Format/Format\";\nimport SEO from \"../components/SEO/SEO\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Client } from \"@notionhq/client\";\n\nimport \"../styles/music.scss\";\n\nconst NOTION_COLLECTION_UUID = \"d4aa82bc984a4236a5b2c6e11ce3da8b\";\n\nconst notion = new Client();\n\ninterface Cover {\n    name: string;\n    url: string;\n    rawUrl: string;\n}\n\ninterface Album {\n    id: string;\n    Review: string;\n    Cover: Cover[];\n    Rating: string;\n    URL: string;\n    Arist: string;\n    \"Release Date\": string;\n    Album: string;\n}\n\ninterface MusicProps {\n    location: string;\n    serverData: Album[];\n}\n\nconst Music = ({ location, serverData }: MusicProps): ReactElement => {\n    const query = graphql`\n        query MusicQuery {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `;\n    const data = useStaticQuery(query);\n\n    const { title } = data.site.siteMetadata;\n\n    const getPages = async () => {\n        try {\n            const response = await notion.databases.query({\n                database_id: NOTION_COLLECTION_UUID,\n            });\n            console.log(response);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    getPages();\n\n    return (\n        <Format location={location} title={title}>\n            <SEO title=\"About\" />\n            <p>\n                View these reivews on my Notion site{\" \"}\n                <a\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href=\"https://notions.michaeldemar.co/d4aa82bc984a4236a5b2c6e11ce3da8b?v=d6979a6f4b4c4978b25a7ac10e972345&pvs=4\"\n                >\n                    here\n                </a>\n                !\n            </p>\n            <div className=\"album-grid\">\n                {serverData.map(album => {\n                    const formattedDate = new Date(\n                        album[\"Release Date\"]\n                    ).toLocaleDateString(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                    });\n\n                    return (\n                        <div className=\"album-card\" key={album.id}>\n                            <img\n                                className=\"album-cover\"\n                                src={album.Cover[0].url}\n                                alt={album.Cover[0].name}\n                            />\n                            <hr\n                                style={{\n                                    margin: \"0rem 1rem 1rem 1rem\",\n                                }}\n                            />\n                            <h2 className=\"album-title\">{album.Album}</h2>\n                            <p className=\"album-artist\">{album.Arist}</p>\n                            <p className=\"album-release-date\">\n                                {formattedDate}\n                            </p>\n                            <p className=\"album-rating\">{album.Rating}</p>\n                            <p className=\"album-review\">{album.Review}</p>\n                            <a className=\"album-link\" href={album.URL}>\n                                Listen\n                            </a>\n                        </div>\n                    );\n                })}\n            </div>\n        </Format>\n    );\n};\n\nexport async function getServerData() {\n    try {\n        const res = await fetch(\n            `https://notion-api.splitbee.io/v1/table/${NOTION_COLLECTION_UUID}`\n        );\n\n        if (!res.ok) {\n            throw new Error(`Response failed`);\n        }\n\n        return {\n            props: await res.json(),\n        };\n    } catch (error) {\n        return {\n            status: 500,\n            headers: {},\n            props: {},\n        };\n    }\n}\n\nexport default Music;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["_Client_auth","_Client_logLevel","_Client_logger","_Client_prefixUrl","_Client_timeoutMs","_Client_notionVersion","_Client_fetch","_Client_agent","_Client_userAgent","__classPrivateFieldSet","this","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","Object","defineProperty","exports","logging_1","errors_1","utils_1","api_endpoints_1","node_fetch_1","package_json_1","Client","constructor","options","_a","_b","_c","_d","_e","_f","blocks","retrieve","args","request","path","getBlock","method","query","pick","queryParams","body","bodyParams","auth","update","updateBlock","delete","deleteBlock","children","append","appendBlockChildren","list","listBlockChildren","databases","listDatabases","getDatabase","queryDatabase","create","createDatabase","updateDatabase","pages","createPage","getPage","updatePage","properties","getPageProperty","users","getUser","listUsers","me","getSelf","comments","createComment","listComments","search","oauth","token","oauthToken","client_id","client_secret","logLevel","LogLevel","WARN","logger","makeConsoleLogger","name","baseUrl","timeoutMs","notionVersion","defaultNotionVersion","fetch","default","agent","version","log","INFO","bodyAsJsonString","entries","length","JSON","stringify","undefined","url","URL","key","Array","isArray","forEach","val","searchParams","decodeURIComponent","String","authorizationHeader","unencodedCredential","authorization","Buffer","from","toString","authAsHeaders","headers","response","RequestTimeoutError","rejectAfterTimeout","toUpperCase","responseText","text","ok","buildRequestError","responseJson","parse","error","isNotionClientError","code","message","isHTTPResponseError","DEBUG","level","extraInfo","logLevelSeverity","authHeaderValue","WeakMap","pathParams","p","user_id","page_id","property_id","block_id","database_id","APIResponseError","UnknownHTTPResponseError","ClientErrorCode","APIErrorCode","NotionClientErrorBase","Error","isObject","isNotionClientErrorWithCode","codes","super","RequestTimeout","isRequestTimeoutError","promise","timeoutMS","Promise","resolve","reject","timeoutId","setTimeout","then","catch","clearTimeout","HTTPResponseError","status","rawBodyText","httpResponseErrorCodes","ResponseError","Unauthorized","RestrictedResource","ObjectNotFound","RateLimited","InvalidJSON","InvalidRequestURL","InvalidRequest","ValidationError","ConflictError","InternalServerError","ServiceUnavailable","isUnknownHTTPResponseError","apiErrorCodes","arguments","isAPIResponseError","bodyText","apiErrorResponseBody","parsed","parseError","parseAPIErrorResponseBody","async","iteratePaginatedAPI","listFn","firstPageArgs","nextCursor","start_cursor","results","next_cursor","isFullPage","object","isFullDatabase","isMentionRichTextItemResponse","isEquationRichTextItemResponse","isTextRichTextItemResponse","isFullComment","isFullUser","isFullPageOrDatabase","isFullBlock","collectPaginatedAPI","item","push","richText","type","Client_1","enumerable","helpers_1","console","ERROR","assertNever","base","keys","map","fromEntries","o","_ref","React","style","marginLeft","marginRight","maxWidth","rhythm","padding","marginBottom","Links","location","Locations","POSTS","Footer","notion","serverData","data","useStaticQuery","title","site","siteMetadata","getPages","Format","SEO","rel","target","href","className","album","formattedDate","Date","toLocaleDateString","year","month","day","id","src","Cover","alt","margin","Album","Arist","Rating","Review","globalObject","self","window","g","getGlobal","module","bind","Headers","Request","Response"],"sourceRoot":""}